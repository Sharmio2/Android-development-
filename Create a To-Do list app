<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h2>My To-Do List</h2>
        <div class="input-section">
            <input type="text" id="taskInput" placeholder="Enter a new task">
            <button id="addTaskBtn">Add</button>
        </div>
        <ul id="taskList"></ul>
    </div>
    <script src="script.js"></script>
</body>
</html>

/* styles.css */
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f0f0f0;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 300px;
}

h2 {
    text-align: center;
}

.input-section {
    display: flex;
    justify-content: space-between;
}

#taskInput {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#addTaskBtn {
    padding: 10px 15px;
    margin-left: 10px;
    border: none;
    background-color: #28a745;
    color: white;
    border-radius: 4px;
    cursor: pointer;
}

#addTaskBtn:hover {
    background-color: #218838;
}

#taskList {
    list-style-type: none;
    padding: 0;
    margin-top: 20px;
}

.task-item {
    background-color: #f9f9f9;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
}

.task-item.completed {
    text-decoration: line-through;
    color: #888;
}

.task-buttons button {
    border: none;
    background: none;
    cursor: pointer;
    margin-left: 5px;
}

.task-buttons .edit-btn {
    color: #007bff;
}

.task-buttons .delete-btn {
    color: #dc3545;
}

// script.js
document.addEventListener('DOMContentLoaded', () => {
    const taskInput = document.getElementById('taskInput');
    const addTaskBtn = document.getElementById('addTaskBtn');
    const taskList = document.getElementById('taskList');

    // Function to add a new task
    const addTask = () => {
        const taskText = taskInput.value.trim();
        if (taskText === '') return;

        const listItem = document.createElement('li');
        listItem.className = 'task-item';

        const taskSpan = document.createElement('span');
        taskSpan.textContent = taskText;
        listItem.appendChild(taskSpan);

        const buttonsDiv = document.createElement('div');
        buttonsDiv.className = 'task-buttons';

        const editBtn = document.createElement('button');
        editBtn.innerHTML = 'Edit';
        editBtn.className = 'edit-btn';
        editBtn.onclick = () => editTask(listItem, taskSpan);
        buttonsDiv.appendChild(editBtn);

        const deleteBtn = document.createElement('button');
        deleteBtn.innerHTML = 'Delete';
        deleteBtn.className = 'delete-btn';
        deleteBtn.onclick = () => deleteTask(listItem);
        buttonsDiv.appendChild(deleteBtn);

        listItem.appendChild(buttonsDiv);
        taskList.appendChild(listItem);

        taskInput.value = '';
    };

    // Function to edit an existing task
    const editTask = (listItem, taskSpan) => {
        const newTaskText = prompt('Edit your task:', taskSpan.textContent);
        if (newTaskText !== null && newTaskText.trim() !== '') {
            taskSpan.textContent = newTaskText.trim();
        }
    };

    // Function to delete a task
    const deleteTask = (listItem) => {
        taskList.removeChild(listItem);
    };

    addTaskBtn.addEventListener('click', addTask);
    taskInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            addTask();
        }
    });
});
